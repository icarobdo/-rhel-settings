---
- name: Diretorio temporario yum
  file:
    path: /opt/yum/x86_64/7Server
    owner: root
    group: root
    state: directory
    mode: u+rx,g-rx,o-rwx

- name: copiar arquivo de confg temporario
  copy:
    src: files/yum.conf
    dest: /opt/yum/yum.conf
    
- name: Subscription Manager Refresh
  command: subscription-manager refresh

- name: Move yum.repos.d
  command: sudo mv /etc/yum.repos.d/"{{ item }}" /opt/
  with_items: "{{ repo_disabled_yum }}"
  ignore_errors: true
  
  
#- name: Move foo to bar
#  command: sudo mv /etc/yum.repos.d/ambari.repo /opt/
#  ignore_errors: true

#- name: Move foo to bar
#  command: sudo mv /etc/yum.repos.d/ambari-hdp-2.repo /opt/  
#  ignore_errors: true

- name: Yum Clean All
  shell: "yum clean all"

#- name: Yum Clean All Transaction
#  command: "yum-complete-transaction --cleanup-only"

- name: Disable repos duplicated
  rhsm_repository:
   name: "{{ item }}"
   state: disabled
  with_items: "{{ repo_disabled }}"
 #when: ansible_facts['distribution'] == "RedHat"  
  ignore_errors: true 

- name: Remove Packages
  yum:
    name: "{{ item }}"
    state: absent
  with_items: "{{ remove_packages }}"
  ignore_errors: true
  
#- name: Install Packages
#  yum:
#    name: "{{ item }}"
#    state: installed
#  with_items: "{{ yum_install }}"  

- name: YUM - Update Bugfix Packages
  yum:
    name: '*'
    conf_file: /opt/yum/yum.conf
    state: latest
    bugfix: Yes
    exclude: 'glusterfs*'
  register: yum_output_bugfix  

- name: Yum Clean All
  shell: "yum clean all"

- name: YUM - Update Security Packages
  yum:
    name: '*'
    conf_file: /opt/yum/yum.conf
    state: latest
    security: Yes
    exclude: 'glusterfs*'
  register: yum_output_security  

- name: Yum Clean All
  shell: "yum clean all"

- name: YUM - Update All Packages
  yum:
    name: '*'
    conf_file: /opt/yum/yum.conf
    state: latest
    exclude: 'glusterfs*'
  register: yum_output_other  

- name: Yum Clean All
  shell: "yum clean all"

- name: Remove Package Kernel
  yum:
    name: "{{ item }}"
    state: absent
  with_items: "{{ remove_package_kernel }}"
  ignore_errors: true
  
- name: Install Package Kernel
  yum:
    name: "{{ item }}"
    state: installed
  with_items: "{{ install_pakage_kernel }}"
  ignore_errors: true
  
#- name: Reboot Machine Post Yum Updates
#  reboot:
#    pre_reboot_delay: 5
#    reboot_timeout: 800

- name: Apagar Diretorio Temporario
  file:
    path: /opt/yum
    state: absent